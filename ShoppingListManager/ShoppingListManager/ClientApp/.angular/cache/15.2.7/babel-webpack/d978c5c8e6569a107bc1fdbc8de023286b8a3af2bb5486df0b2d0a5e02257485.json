{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function HomeComponent_tr_14_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteItem(item_r1.id));\n    });\n    i0.ɵɵelement(7, \"i\", 3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.amount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.name);\n  }\n}\nexport class HomeComponent {\n  constructor(http, baseUrl) {\n    this.toBuyList = [];\n    this.defaultItem = {\n      id: '00000000-0000-0000-0000-000000000000',\n      name: '',\n      amount: 1,\n      isImportant: false,\n      sortOrder: 0,\n      listType: 0,\n      currentSortMode: 0\n    };\n    this.newItem = {\n      ...this.defaultItem\n    };\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.refreshLists();\n  }\n  refreshLists() {\n    this.http.get(`${this.baseUrl}api/ShoppingList/ToBuy`).subscribe({\n      next: result => {\n        this.toBuyList = result;\n      },\n      error: error => console.error(error)\n    });\n  }\n  addItemToBuy() {\n    this.http.post(`${this.baseUrl}api/ShoppingList/AddItemToBuy`, this.newItem).subscribe({\n      next: result => {\n        this.newItem = {\n          ...this.defaultItem\n        };\n        this.refreshLists();\n      },\n      error: error => console.error(error)\n    });\n  }\n  deleteItem(id) {\n    this.http.delete(`${this.baseUrl}api/ShoppingList/DeleteItem/${id}`).subscribe({\n      next: () => this.refreshLists(),\n      error: error => console.error(error)\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"bi-trash-fill\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Shopping List Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Items to Buy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 0)(5, \"thead\")(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Item Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, HomeComponent_tr_14_Template, 8, 2, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.toBuyList);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAaIA,0BAAmC;IAC7BA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAC6BA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,uBAA6B;IAAAA,iBAAS;;;;IAHjGA,eAAiB;IAAjBA,oCAAiB;IACjBA,eAAe;IAAfA,kCAAe;;;ACRzB,OAAM,MAAOC,aAAa;EAmBxBC,YAAYC,IAAgB,EAAsBC,OAAe;IAlB1D,cAAS,GAAW,EAAE;IAEZ,gBAAW,GAAS;MACnCC,EAAE,EAAE,sCAAsC;MAC1CC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,CAAC;MACTC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAE,CAAC;MACXC,eAAe,EAAE;KAClB;IAES,YAAO,GAAS;MAAE,GAAG,IAAI,CAACC;IAAW,CAAE;IAO/C,IAAI,CAACT,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACS,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACV,IAAI,CAACW,GAAG,CAAS,GAAG,IAAI,CAACV,OAAO,wBAAwB,CAAC,CAACW,SAAS,CAAC;MACvEC,IAAI,EAAGC,MAAM,IAAI;QACf,IAAI,CAACC,SAAS,GAAGD,MAAM;MACzB,CAAC;MACDE,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK;KACtC,CAAC;EACJ;EAEAE,YAAY;IACV,IAAI,CAAClB,IAAI,CAACmB,IAAI,CAAO,GAAG,IAAI,CAAClB,OAAO,+BAA+B,EAAE,IAAI,CAACmB,OAAO,CAAC,CAACR,SAAS,CAAC;MAC3FC,IAAI,EAAGC,MAAM,IAAI;QACf,IAAI,CAACM,OAAO,GAAG;UAAE,GAAG,IAAI,CAACX;QAAW,CAAE;QACtC,IAAI,CAACC,YAAY,EAAE;MACrB,CAAC;MACDM,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK;KACtC,CAAC;EACJ;EAEAK,UAAU,CAACnB,EAAU;IACnB,IAAI,CAACF,IAAI,CAACsB,MAAM,CAAC,GAAG,IAAI,CAACrB,OAAO,+BAA+BC,EAAE,EAAE,CAAC,CAACU,SAAS,CAAC;MAC7EC,IAAI,EAAE,MAAM,IAAI,CAACH,YAAY,EAAE;MAC/BM,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK;KACtC,CAAC;EACJ;;AAjDWlB,aAAa;mBAAbA,aAAa,4DAmBc,UAAU;AAAA;AAnBrCA,aAAa;QAAbA,aAAa;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP1B9B,0BAAI;MAAAA,qCAAqB;MAAAA,iBAAK;MAE9BA,0BAAI;MAAAA,4BAAY;MAAAA,iBAAK;MAErBA,gCAAqB;MAGXA,wBAAQ;MAAAA,iBAAK;MACjBA,0BAAI;MAAAA,0BAAS;MAAAA,iBAAK;MAClBA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAGpBA,8BAAO;MACLA,8DAMK;MACPA,iBAAQ;;;MAPeA,gBAAY;MAAZA,uCAAY","names":["i0","HomeComponent","constructor","http","baseUrl","id","name","amount","isImportant","sortOrder","listType","currentSortMode","defaultItem","refreshLists","get","subscribe","next","result","toBuyList","error","console","addItemToBuy","post","newItem","deleteItem","delete","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/calebgriffin/Documents/GitHub/Shopping-List-Manager-CG/ShoppingListManager/ShoppingListManager/ClientApp/src/app/home/home.component.html","/Users/calebgriffin/Documents/GitHub/Shopping-List-Manager-CG/ShoppingListManager/ShoppingListManager/ClientApp/src/app/home/home.component.ts"],"sourcesContent":["<h1>Shopping List Manager</h1>\n\n<h3>Items to Buy</h3>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Quantity</th>\n      <th>Item Name</th>\n      <th>Actions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let item of toBuyList\">\n      <td>{{ item.amount }}</td>\n      <td>{{ item.name }}</td>\n      <td>\n        <button class=\"btn btn-danger\" (click)=\"deleteItem(item.id)\"><i class=\"bi-trash-fill\"></i></button>\n      </td>\n    </tr>\n  </tbody>\n</table>","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n  public toBuyList: Item[] = [];\n\n  private readonly defaultItem: Item = {\n    id: '00000000-0000-0000-0000-000000000000',\n    name: '',\n    amount: 1,\n    isImportant: false,\n    sortOrder: 0,\n    listType: 0,\n    currentSortMode: 0\n  };\n\n  protected newItem: Item = { ...this.defaultItem };\n\n  private http: HttpClient;\n\n  private baseUrl: string;\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.refreshLists();\n  }\n\n  refreshLists() {\n    this.http.get<Item[]>(`${this.baseUrl}api/ShoppingList/ToBuy`).subscribe({\n      next: (result) => {\n        this.toBuyList = result;\n      },\n      error: (error) => console.error(error)\n    });\n  }\n\n  addItemToBuy() {\n    this.http.post<Item>(`${this.baseUrl}api/ShoppingList/AddItemToBuy`, this.newItem).subscribe({\n      next: (result) => {\n        this.newItem = { ...this.defaultItem };\n        this.refreshLists();\n      },\n      error: (error) => console.error(error)\n    });\n  }\n\n  deleteItem(id: string) {\n    this.http.delete(`${this.baseUrl}api/ShoppingList/DeleteItem/${id}`).subscribe({\n      next: () => this.refreshLists(),\n      error: (error) => console.error(error)\n    });\n  }\n}\n\ninterface Item {\n  id: string;\n  name: string;\n  amount: number;\n  isImportant: boolean;\n  sortOrder: number;\n  listType: number;\n  currentSortMode: number;\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}