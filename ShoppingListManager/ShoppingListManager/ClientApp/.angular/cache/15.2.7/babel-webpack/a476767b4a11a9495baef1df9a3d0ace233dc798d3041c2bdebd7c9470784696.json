{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(http, baseUrl) {\n    this.toBuyList = [];\n    this.prevBoughtList = [];\n    this.sortMode = SortMode.Alphabetical;\n    this.defaultItem = {\n      id: '00000000-0000-0000-0000-000000000000',\n      name: '',\n      amount: 1,\n      isImportant: false,\n      sortOrder: 0,\n      listType: 0,\n      currentSortMode: 0\n    };\n    this.newItem = {\n      ...this.defaultItem\n    };\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.refreshLists();\n  }\n  refreshLists() {\n    this.http.get(`${this.baseUrl}api/ShoppingList/ToBuy`).subscribe({\n      next: result => {\n        this.toBuyList = result;\n      },\n      error: error => console.error(error)\n    });\n    this.http.get(`${this.baseUrl}api/ShoppingList/PrevBought`).subscribe({\n      next: result => {\n        this.prevBoughtList = result;\n      },\n      error: error => console.error(error)\n    });\n  }\n  addItemToBuy() {\n    this.http.post(`${this.baseUrl}api/ShoppingList/AddItemToBuy`, this.newItem).subscribe({\n      next: result => {\n        this.newItem = {\n          ...this.defaultItem\n        };\n        this.refreshLists();\n      },\n      error: error => console.error(error)\n    });\n  }\n  deleteItem(id) {\n    this.http.delete(`${this.baseUrl}api/ShoppingList/DeleteItem/${id}`).subscribe({\n      next: () => this.refreshLists(),\n      error: error => console.error(error)\n    });\n  }\n  toggleItemImportance(id) {\n    this.http.post(`${this.baseUrl}api/ShoppingList/ToggleItemImportance/${id}`, null).subscribe({\n      next: () => this.refreshLists(),\n      error: error => console.error(error)\n    });\n  }\n  moveItemToPrevBought(id) {\n    this.http.post(`${this.baseUrl}api/ShoppingList/MoveItemToPrevBought/${id}`, null).subscribe({\n      next: () => this.refreshLists(),\n      error: error => console.error(error)\n    });\n  }\n  changeSortMode(newMode) {\n    this.sortMode = newMode;\n    this.http.post(`${this.baseUrl}api/ShoppingList/ChangeSortMode/${newMode}`, null).subscribe({\n      next: () => this.refreshLists(),\n      error: error => console.error(error)\n    });\n  }\n  moveItem(id, direction) {\n    // If the user manually changes the sort order of an item, we need to switch to custom sort mode\n    this.changeSortMode(SortMode.Custom);\n    this.http.post(`${this.baseUrl}api/ShoppingList/MoveItem/${id}/${direction}`, null).subscribe({\n      next: () => this.refreshLists(),\n      error: error => console.error(error)\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n}), __param(1, Inject('BASE_URL'))], HomeComponent);\nexport { HomeComponent };\nvar SortMode;\n(function (SortMode) {\n  SortMode[SortMode[\"Alphabetical\"] = 0] = \"Alphabetical\";\n  SortMode[SortMode[\"Custom\"] = 1] = \"Custom\";\n})(SortMode || (SortMode = {}));","map":{"version":3,"mappings":"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","names":["Component","Inject","HomeComponent","constructor","http","baseUrl","SortMode","Alphabetical","id","name","amount","isImportant","sortOrder","listType","currentSortMode","defaultItem","refreshLists","get","subscribe","next","result","toBuyList","error","console","prevBoughtList","addItemToBuy","post","newItem","deleteItem","delete","toggleItemImportance","moveItemToPrevBought","changeSortMode","newMode","sortMode","moveItem","direction","Custom","selector","templateUrl","__param"],"sourceRoot":"","sources":["/Users/calebgriffin/Documents/GitHub/Shopping-List-Manager-CG/ShoppingListManager/ShoppingListManager/ClientApp/src/app/home/home.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n  public toBuyList: Item[] = [];\n\n  public prevBoughtList: Item[] = [];\n\n  protected sortMode: SortMode = SortMode.Alphabetical;\n\n  private readonly defaultItem: Item = {\n    id: '00000000-0000-0000-0000-000000000000',\n    name: '',\n    amount: 1,\n    isImportant: false,\n    sortOrder: 0,\n    listType: 0,\n    currentSortMode: 0\n  };\n\n  protected newItem: Item = { ...this.defaultItem };\n\n  private http: HttpClient;\n\n  private baseUrl: string;\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.refreshLists();\n  }\n\n  refreshLists() {\n    this.http.get<Item[]>(`${this.baseUrl}api/ShoppingList/ToBuy`).subscribe({\n      next: (result) => {\n        this.toBuyList = result;\n      },\n      error: (error) => console.error(error)\n    });\n\n    this.http.get<Item[]>(`${this.baseUrl}api/ShoppingList/PrevBought`).subscribe({\n      next: (result) => {\n        this.prevBoughtList = result;\n      },\n      error: (error) => console.error(error)\n    });\n  }\n\n  addItemToBuy() {\n    this.http.post<Item>(`${this.baseUrl}api/ShoppingList/AddItemToBuy`, this.newItem).subscribe({\n      next: (result) => {\n        this.newItem = { ...this.defaultItem };\n        this.refreshLists();\n      },\n      error: (error) => console.error(error)\n    });\n  }\n\n  deleteItem(id: string) {\n    this.http.delete(`${this.baseUrl}api/ShoppingList/DeleteItem/${id}`).subscribe({\n      next: () => this.refreshLists(),\n      error: (error) => console.error(error)\n    });\n  }\n\n  toggleItemImportance(id: string) {\n    this.http.post(`${this.baseUrl}api/ShoppingList/ToggleItemImportance/${id}`, null).subscribe({\n      next: () => this.refreshLists(),\n      error: (error) => console.error(error)\n    });\n  }\n\n  moveItemToPrevBought(id: string) {\n    this.http.post(`${this.baseUrl}api/ShoppingList/MoveItemToPrevBought/${id}`, null).subscribe({\n      next: () => this.refreshLists(),\n      error: (error) => console.error(error)\n    });\n  }\n\n  changeSortMode(newMode: number) {\n    this.sortMode = newMode;\n\n    this.http.post(`${this.baseUrl}api/ShoppingList/ChangeSortMode/${newMode}`, null).subscribe({\n      next: () => this.refreshLists(),\n      error: (error) => console.error(error)\n    });\n  }\n\n  moveItem(id: string, direction: number) {\n    // If the user manually changes the sort order of an item, we need to switch to custom sort mode\n    this.changeSortMode(SortMode.Custom);\n\n    this.http.post(`${this.baseUrl}api/ShoppingList/MoveItem/${id}/${direction}`, null).subscribe({\n      next: () => this.refreshLists(),\n      error: (error) => console.error(error)\n    });\n  }\n}\n\nenum SortMode {\n  Alphabetical = 0,\n  Custom = 1\n}\n\ninterface Item {\n  id: string;\n  name: string;\n  amount: number;\n  isImportant: boolean;\n  sortOrder: number;\n  listType: number;\n  currentSortMode: number;\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}